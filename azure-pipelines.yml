trigger:
- master

jobs:
  - job: Build
    condition: ne(variables['skipBuild'], 'true')
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
      - script: "docker pull aetas/platformio:4.0.3"
        displayName: "docker pull aetas/platformio:4.0.3"
      - script: |
          gradle switchToEthernet    
          docker run --rm --name pio -v $PWD:/workspace aetas/platformio:4.0.3 run
        displayName: "Build ETHERNET"
      - script: |
          gradle switchToWifi
          docker run --rm --name pio -v $PWD:/workspace aetas/platformio:4.0.3 run
        displayName: "Build WIFI"
  - job: Test
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
      - script: g++ -v
        displayName: 'Display g++ version'
      - script: |
          g++ -g -std=gnu++11 test/main/test-main.o -o test/allTests -I ./include -I ./test/ArduinoMocks -I ./test/unit/mocks ./test/ArduinoMocks/*.c ./test/ArduinoMocks/*.cpp ./src/config/Configuration.cpp ./src/config/device/*.cpp ./src/device/*.cpp ./src/homie/*.cpp ./src/log/*.cpp ./src/mqtt/*.cpp ./src/httpserver/*.cpp ./test/unit/*.cpp
        displayName: 'Compile tests'
      - script: test/allTests
        displayName: "Run all tests"
  - job: Release
    dependsOn: ["Build", "Test"]
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    # variables: # these variables are settable at queue time (needs to be set in Azure DevOps)
    #  version_incrementer: dev
    #  start_development: "true"
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
      - checkout: self
        persistCredentials: true
      - script: |
          if [ $START_DEVELOPMENT ] 
          then 
            START_DEVELOPMENT_FLAG="-PstartDevelopment"
          fi
          gradle release -PversionIncrementer=$VERSION_INCREMENTER $START_DEVELOPMENT_FLAG
        displayName: Release new version
        
