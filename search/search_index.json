{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Aetas RoomHub 3 What is RoomHub Aetas RoomHub is gateway device for multiple wired electronic sensors and controllers, which are essential in creating smart home solution. RoomHub has been created to support multi-device, fully wired solution. RoomHub supports MQTT Homie convention for seamless integration with home automation software like OpenHab and Home Assistant. [TODO add photo] What's the use case? Typical use case for RoomHub is house with sensors and controllers distributed all around with wired connections. It is possible to plug in simple (and cheap) devices, like relay modules, PIR motion sensors or just plain wall switches into RoomHub to make fully capable home automation system. [TODO add simple diagram how it works as a MQTT gateway] What's next? Quick start Hardware","title":"Home"},{"location":"#aetas-roomhub-3","text":"","title":"Aetas RoomHub 3"},{"location":"#what-is-roomhub","text":"Aetas RoomHub is gateway device for multiple wired electronic sensors and controllers, which are essential in creating smart home solution. RoomHub has been created to support multi-device, fully wired solution. RoomHub supports MQTT Homie convention for seamless integration with home automation software like OpenHab and Home Assistant. [TODO add photo]","title":"What is RoomHub"},{"location":"#whats-the-use-case","text":"Typical use case for RoomHub is house with sensors and controllers distributed all around with wired connections. It is possible to plug in simple (and cheap) devices, like relay modules, PIR motion sensors or just plain wall switches into RoomHub to make fully capable home automation system. [TODO add simple diagram how it works as a MQTT gateway]","title":"What's the use case?"},{"location":"#whats-next","text":"Quick start Hardware","title":"What's next?"},{"location":"advanced/configuration-raw/","text":"Warning This section describes raw configuration format accepted by RoomHub firmware. This is usually needed only in development and for very early alpha versions of RoomHub firmware. You should use RoomHub Configurator for regular configuration. [TODO write about direct configuration format]","title":"Raw configuration"},{"location":"hardware/board-layout/","text":"[TODO board layout drawing] [TODO pins usage on the board and left pins]","title":"Board layout"},{"location":"hardware/components/","text":"Bill of materials NAME AMOUNT DC Power Jack Plug Socket 2.1/5.5 1 MCP23017 4 DIP28 Socket 4 CD74HC4067 16 Channel Analog Multiplexer 1 Screw Terminal 2-pin 2 IDC16 Male Pin PCB Socket 10 RJ45 Ethernet Socket 2x8 Ports 1 LD1117V33 Linear Voltage Regulator 3.3V 1 Molex male connector 3-pin 2 Micro switch button 4-pin 2 logic level converter 4-ch 5V to 3.3V 1 ESP32 DevKit module (30 pins version) 1 goldpins 2-lines 19 goldpins 1-line 10 Pin jumper 8 3.3K resistor 1 Goldpin socket 1-line 30 IDC16 flat ribbon cable (in cm) 50 IDC16 ribbon connector 10 W5500 ( only for Ethernet version ) 1","title":"Components"},{"location":"hardware/components/#bill-of-materials","text":"NAME AMOUNT DC Power Jack Plug Socket 2.1/5.5 1 MCP23017 4 DIP28 Socket 4 CD74HC4067 16 Channel Analog Multiplexer 1 Screw Terminal 2-pin 2 IDC16 Male Pin PCB Socket 10 RJ45 Ethernet Socket 2x8 Ports 1 LD1117V33 Linear Voltage Regulator 3.3V 1 Molex male connector 3-pin 2 Micro switch button 4-pin 2 logic level converter 4-ch 5V to 3.3V 1 ESP32 DevKit module (30 pins version) 1 goldpins 2-lines 19 goldpins 1-line 10 Pin jumper 8 3.3K resistor 1 Goldpin socket 1-line 30 IDC16 flat ribbon cable (in cm) 50 IDC16 ribbon connector 10 W5500 ( only for Ethernet version ) 1","title":"Bill of materials"},{"location":"user-guide/configuration/","text":"RoomHub configurator installation Download latest version of RoomHub Configurator for your operating system: Linux MacOS Windows After extracting downloaded archive - executable file is located in bin/room-hub-configurator (for Un*x) or bin/room-hub-configurator.bat (for Windows). RoomHub configuration process Info If you have configured your RoomHub earlier - you may want to start with resetting devices configuration and/or WiFi connection . Make sure RoomHub has WiFi connection configured or using ethernet connection with W5500. Keep in mind that different firmware needs to be used for wired connection. Prepare configuration file . Run configurator to send configuration to RoomHub Linux bin/room-hub-configurator your-file.roomhub.yml MacOS bin/room-hub-configurator your-file.roomhub.yml Windows bin/room-hub-configurator.bat your-file.roomhub.yml Observe logs to check if configuration has been applied successfully. RoomHub will be automatically restarted if configuration has been finished. In case of errors you can correct configuration file and run configurator again without restarting RoomHub. You can subscribe to MQTT topic homie/YourRoomHubName/# to see if RoomHub has correctly started with new configuration. [TODO: add asciinema showing configuration process] RoomHub configuration file RoomHub configuration file is written in YAML format. You can use basic text editor to create this file, but if you are using more advanced editor (like VSCode ) then you can use JSON schema for autocompletion and validation. The structure of the file is like: your-file.roomhub.yml configVersion : 3.0 # version of this config file format (leave unchanged) name : YourRoomHubName # name of RoomHub used in MQTT topic destinationIpAddress : 192.168.1.66 # IP of RoomHub (e.g. from EspTouch) mqttHostname : 192.168.1.52 ## address of MQTT server network : # Ethernet configuration - put anything when running on WiFi macAddress : 6D:CB:54:AD:E9:93 ipAddress : 192.168.1.66 rooms : # list of rooms - name : bathroom points : # list of points - name : bathroom light switch box portNumber : 1 devices : # list of devices - name : bathroom light # name of device id : 1 # identifier of device (unique in this configuration file) wires : [ BLUE ] # list of ethernet wires used for connection type : RELAY # type of device - name : bathroom light switch id : 2 wires : [ BLUE_WHITE ] type : SWITCH_BUTTON config : # some devices has additional config options debounceMs : 50 See naming convention page to find explanation of terms like \"point\". Reset devices configuration To reset configuration (device name, MQTT hostname and devices) keep button 2 (on Mainboard) pressed for 5 seconds when restarting RoomHub. Make sure RoomHub is connected to power socket Keep button 2 pressed on mainboard (see image below) Reset RoomHub by shortly pressing EN button on ESP32 Release button 2 when blue LED will start blinking on ESP32 ESP32 will indicate configuration reset by blinking 3 times with blue LED. After configuration reset, RoomHub will restart and start server waiting for new configuration. WiFi configuration WiFi configuration is done with ESP Touch Smart Config You need Android or iOS smartphone to configure WiFi on RoomHub. First reset existing RoomHub WiFi configuration and then configure it with app on your mobile. Reset WiFi configuration To reset WiFi setup, keep button 1 on mainboard pressed for 5 seconds when restarting RoomHub. Make sure RoomHub is connected to power socket Keep button 1 pressed on mainboard ( see image ) Reset RoomHub by pushing \"EN\" button on ESP32 for a moment Release button 1 when blue LED will start blinking on ESP32 ESP32 will indicate WiFi configuration reset by blinking 5 times with blue LED. After WiFi configuration reset, RoomHub will restart and start in ESP Smart Config WiFi mode. Android Install EspTouch from Google Play. Connect your phone to WiFi network you want RoomHub to be connected to Open EspTouch and insert password Press \"confirm\" After around 30 seconds you should get success message with IP address of RoomHub - store this IP address for later iPhone (iOS) Install Espressif Esptouch from App Store. Connect your phone to WiFi network you want RoomHub to be connected to Open EspTouch and insert password Press \"confirm\" After around 30 seconds you should get success message with IP address of RoomHub - store this IP address for later","title":"Configuration"},{"location":"user-guide/configuration/#roomhub-configurator-installation","text":"Download latest version of RoomHub Configurator for your operating system: Linux MacOS Windows After extracting downloaded archive - executable file is located in bin/room-hub-configurator (for Un*x) or bin/room-hub-configurator.bat (for Windows).","title":"RoomHub configurator installation"},{"location":"user-guide/configuration/#roomhub-configuration-process","text":"Info If you have configured your RoomHub earlier - you may want to start with resetting devices configuration and/or WiFi connection . Make sure RoomHub has WiFi connection configured or using ethernet connection with W5500. Keep in mind that different firmware needs to be used for wired connection. Prepare configuration file . Run configurator to send configuration to RoomHub Linux bin/room-hub-configurator your-file.roomhub.yml MacOS bin/room-hub-configurator your-file.roomhub.yml Windows bin/room-hub-configurator.bat your-file.roomhub.yml Observe logs to check if configuration has been applied successfully. RoomHub will be automatically restarted if configuration has been finished. In case of errors you can correct configuration file and run configurator again without restarting RoomHub. You can subscribe to MQTT topic homie/YourRoomHubName/# to see if RoomHub has correctly started with new configuration. [TODO: add asciinema showing configuration process]","title":"RoomHub configuration process"},{"location":"user-guide/configuration/#roomhub-configuration-file","text":"RoomHub configuration file is written in YAML format. You can use basic text editor to create this file, but if you are using more advanced editor (like VSCode ) then you can use JSON schema for autocompletion and validation. The structure of the file is like: your-file.roomhub.yml configVersion : 3.0 # version of this config file format (leave unchanged) name : YourRoomHubName # name of RoomHub used in MQTT topic destinationIpAddress : 192.168.1.66 # IP of RoomHub (e.g. from EspTouch) mqttHostname : 192.168.1.52 ## address of MQTT server network : # Ethernet configuration - put anything when running on WiFi macAddress : 6D:CB:54:AD:E9:93 ipAddress : 192.168.1.66 rooms : # list of rooms - name : bathroom points : # list of points - name : bathroom light switch box portNumber : 1 devices : # list of devices - name : bathroom light # name of device id : 1 # identifier of device (unique in this configuration file) wires : [ BLUE ] # list of ethernet wires used for connection type : RELAY # type of device - name : bathroom light switch id : 2 wires : [ BLUE_WHITE ] type : SWITCH_BUTTON config : # some devices has additional config options debounceMs : 50 See naming convention page to find explanation of terms like \"point\".","title":"RoomHub configuration file"},{"location":"user-guide/configuration/#reset-devices-configuration","text":"To reset configuration (device name, MQTT hostname and devices) keep button 2 (on Mainboard) pressed for 5 seconds when restarting RoomHub. Make sure RoomHub is connected to power socket Keep button 2 pressed on mainboard (see image below) Reset RoomHub by shortly pressing EN button on ESP32 Release button 2 when blue LED will start blinking on ESP32 ESP32 will indicate configuration reset by blinking 3 times with blue LED. After configuration reset, RoomHub will restart and start server waiting for new configuration.","title":"Reset devices configuration"},{"location":"user-guide/configuration/#wifi-configuration","text":"WiFi configuration is done with ESP Touch Smart Config You need Android or iOS smartphone to configure WiFi on RoomHub. First reset existing RoomHub WiFi configuration and then configure it with app on your mobile.","title":"WiFi configuration"},{"location":"user-guide/configuration/#reset-wifi-configuration","text":"To reset WiFi setup, keep button 1 on mainboard pressed for 5 seconds when restarting RoomHub. Make sure RoomHub is connected to power socket Keep button 1 pressed on mainboard ( see image ) Reset RoomHub by pushing \"EN\" button on ESP32 for a moment Release button 1 when blue LED will start blinking on ESP32 ESP32 will indicate WiFi configuration reset by blinking 5 times with blue LED. After WiFi configuration reset, RoomHub will restart and start in ESP Smart Config WiFi mode.","title":"Reset WiFi configuration"},{"location":"user-guide/configuration/#android","text":"Install EspTouch from Google Play. Connect your phone to WiFi network you want RoomHub to be connected to Open EspTouch and insert password Press \"confirm\" After around 30 seconds you should get success message with IP address of RoomHub - store this IP address for later","title":"Android"},{"location":"user-guide/configuration/#iphone-ios","text":"Install Espressif Esptouch from App Store. Connect your phone to WiFi network you want RoomHub to be connected to Open EspTouch and insert password Press \"confirm\" After around 30 seconds you should get success message with IP address of RoomHub - store this IP address for later","title":"iPhone (iOS)"},{"location":"user-guide/naming-convention/","text":"Homie device - same as RoomHub - it is not the same as \"device\" (see below) Device - sensor or controller connected to RoomHub (e.g. relay module or switch button) PJON Controller - Additional controller (e.g. Arduino Pro Mini) used to provide communication with RoomHub, for devices which are using other communication channels than simple digital or analog wire (e.g. serial, I2C or 1-Wire). Point - each place connected to RoomHub with single ethernet/UTP cable, can have many devices connected to it Room - space containing multiple points, it helps divide configuration into logical parts, but has currently no other influence after configuration is send to RoomHub (e.g. kitchen which has multiple light switches) Wire - single wire of UTP cable which may be use to connect one (digital/analog) or multiple (PJON) devices.","title":"Naming convention"},{"location":"user-guide/quick-start/","text":"Info This quick start guide assumes you have RoomHub hardware ready. If you are looking for how to prepare the hardware - look into hardware section . Quick start guide shows how to connect relay module and configure to work with it RoomHub. Connecting other types of devices is similar and can be done with the same steps. What do you need Assembled Aetas RoomHub 3 PlatformIO installed WiFi network Mobile phone (Android or iOS) Running MQTT broker (e.g. Mosquitto) MQTT client installed on your computer (e.g. MQTT.js ) UTP cable relay module Connect and configure device [TODO: this is only template add all needed elements and polish it] Warning Make sure RoomHub is never connected to power supply and USB port at the same time. This will destroy the device and may damage your computer. Install RoomHub firmware (see instruction ) Connect RoomHub to power supply (make sure it is not connected to USB) Keep button 1 pressed on RoomHub and restart it by pressing \"EN\" button on ESP32 (keep button 1 pressed until blue LED will blink 3 times - around 5 seconds) Use EspTouch to connect RoomHub to your WiFi network ( Google Play or Apple Store ) - more connect with your phone to the WiFi network you want RoomHub to be connected Put your WiFi password in the application Press \"Confirm\" in the app After around 30 seconds you should get success message with IP address of RoomHub - store this IP address for later Prepare UTP cable with plug on one side (according to standard T568B) Connect module to UTP cable VCC (orange wire) ground (orange-white wire) control (blue wire) [TODO: photo with module connected to wires] Connect module to RoomHub port 1 [TODO: photo with cable plugged into port 1] Prepare configuration file in YAML - look into comments to find out which value to change configVersion : 3.0 name : TestRoomHub destinationIpAddress : 192.168.1.66 # IP of RoomHub (see point 1.) mqttHostname : 192.168.1.52 # IP of your MQTT broker network : # only for Ethernet - leave as it is for WiFi connection macAddress : 6D:CB:54:AD:E9:93 ipAddress : 0.0.0.0 rooms : - name : workshop points : - name : point with test relay portNumber : 1 devices : - name : test relay id : 1 wires : [ BLUE ] type : RELAY For more details on configuration files see Configuration with RoomHub Configurator [TODO: add information which values to change and how] Apply configuration with configurator Download latest version of RoomHub Configurator from GitHub release page Run Configurator CLI with command on Linux/MacOS ./rhc workshop.roomhub.yml on Windows rhc.bat workshop.roomhub.yml Try to send MQTT message to RoomHub to turn switch relay [TODO: more points?] [TODO: go through points with device and check that everything is described - ask Piotr or Ania to do that]","title":"Quick Start"},{"location":"user-guide/quick-start/#what-do-you-need","text":"Assembled Aetas RoomHub 3 PlatformIO installed WiFi network Mobile phone (Android or iOS) Running MQTT broker (e.g. Mosquitto) MQTT client installed on your computer (e.g. MQTT.js ) UTP cable relay module","title":"What do you need"},{"location":"user-guide/quick-start/#connect-and-configure-device","text":"[TODO: this is only template add all needed elements and polish it] Warning Make sure RoomHub is never connected to power supply and USB port at the same time. This will destroy the device and may damage your computer. Install RoomHub firmware (see instruction ) Connect RoomHub to power supply (make sure it is not connected to USB) Keep button 1 pressed on RoomHub and restart it by pressing \"EN\" button on ESP32 (keep button 1 pressed until blue LED will blink 3 times - around 5 seconds) Use EspTouch to connect RoomHub to your WiFi network ( Google Play or Apple Store ) - more connect with your phone to the WiFi network you want RoomHub to be connected Put your WiFi password in the application Press \"Confirm\" in the app After around 30 seconds you should get success message with IP address of RoomHub - store this IP address for later Prepare UTP cable with plug on one side (according to standard T568B) Connect module to UTP cable VCC (orange wire) ground (orange-white wire) control (blue wire) [TODO: photo with module connected to wires] Connect module to RoomHub port 1 [TODO: photo with cable plugged into port 1] Prepare configuration file in YAML - look into comments to find out which value to change configVersion : 3.0 name : TestRoomHub destinationIpAddress : 192.168.1.66 # IP of RoomHub (see point 1.) mqttHostname : 192.168.1.52 # IP of your MQTT broker network : # only for Ethernet - leave as it is for WiFi connection macAddress : 6D:CB:54:AD:E9:93 ipAddress : 0.0.0.0 rooms : - name : workshop points : - name : point with test relay portNumber : 1 devices : - name : test relay id : 1 wires : [ BLUE ] type : RELAY For more details on configuration files see Configuration with RoomHub Configurator [TODO: add information which values to change and how] Apply configuration with configurator Download latest version of RoomHub Configurator from GitHub release page Run Configurator CLI with command on Linux/MacOS ./rhc workshop.roomhub.yml on Windows rhc.bat workshop.roomhub.yml Try to send MQTT message to RoomHub to turn switch relay [TODO: more points?] [TODO: go through points with device and check that everything is described - ask Piotr or Ania to do that]","title":"Connect and configure device"},{"location":"user-guide/supported-devices/","text":"This is a list of devices currently supported by RoomHub. That means you can connect device either with digital, analog or PJON connection to RoomHub and configure it with RoomHub Configurator. All supported devices need to be compatible with 5V power supply. The name in the parenthesis in the header is used in configuration Digital devices Relay module ( RELAY ) Relay module which allows to control turning on/off electrical devices and lights. Controlled with LOW signal. Additional configuration: NONE Switch button ( SWITCH_BUTTON ) Switch button or push button. Additional configuration: debounceMs [default: 0] - number of milliseconds for debounce (helps to avoid flickering) Emulated switch ( EMULATED_SWITCH ) Emulates switch button press with changing digital output from HIGH to LOW for 500ms and back to HIGH state. It is useful for controlling devices which has possibility to connect switch button (e.g. garage gate opener). Additional configuration: NONE Motion detector ( MOTION_DETECTOR ) PIR Motion Sensor/Detector. Additional configuration: debounceMs [default: 0] - number of milliseconds for debounce (helps to avoid flickering) Digital input ( DIGITAL_INPUT ) General purpose single digital input. Can be used for measuring state on any digital input. Works for devices like buttons (prefer SWITCH_BUTTON ) or motion sensor (prefer MOTION_DETECTOR ). Additional configuration: debounceMs [default: 0] - number of milliseconds for debounce (helps to avoid flickering) Digital output ( DIGITAL_OUTPUT ) General purpose single digital output. Can be used for generating digital signal on single wire. Works for devices like relay (prefer RELAY ). Additional configuration: NONE Analog devices SCT013 ( SCT013 ) Non-invasive AC Current Sensor (SCT-013-000). It allows to measure current. Additional configuration: NONE PJON devices This group of devices requires PJON controller on the side of the device for communication with RoomHub. PJON devices are not yet supported in current version of RoomHub ( see issue on Github ). BME280 ( BME280 ) GitHub issue #6 Temperature and humidity sensor. Requires PJON controller. Additional configuration: pjonId [default: 0] - PJON controller identifier on PJON bus (0 means it will be assigned automatically) [TODO: do we support automatic assignment in current version?] Support planned in the next version DHT22 ( DHT22 ) GitHub issue #12 Temperature and humidity sensor.","title":"Supported devices"},{"location":"user-guide/supported-devices/#digital-devices","text":"","title":"Digital devices"},{"location":"user-guide/supported-devices/#relay-module-relay","text":"Relay module which allows to control turning on/off electrical devices and lights. Controlled with LOW signal. Additional configuration: NONE","title":"Relay module (RELAY)"},{"location":"user-guide/supported-devices/#switch-button-switch_button","text":"Switch button or push button. Additional configuration: debounceMs [default: 0] - number of milliseconds for debounce (helps to avoid flickering)","title":"Switch button (SWITCH_BUTTON)"},{"location":"user-guide/supported-devices/#emulated-switch-emulated_switch","text":"Emulates switch button press with changing digital output from HIGH to LOW for 500ms and back to HIGH state. It is useful for controlling devices which has possibility to connect switch button (e.g. garage gate opener). Additional configuration: NONE","title":"Emulated switch (EMULATED_SWITCH)"},{"location":"user-guide/supported-devices/#motion-detector-motion_detector","text":"PIR Motion Sensor/Detector. Additional configuration: debounceMs [default: 0] - number of milliseconds for debounce (helps to avoid flickering)","title":"Motion detector (MOTION_DETECTOR)"},{"location":"user-guide/supported-devices/#digital-input-digital_input","text":"General purpose single digital input. Can be used for measuring state on any digital input. Works for devices like buttons (prefer SWITCH_BUTTON ) or motion sensor (prefer MOTION_DETECTOR ). Additional configuration: debounceMs [default: 0] - number of milliseconds for debounce (helps to avoid flickering)","title":"Digital input (DIGITAL_INPUT)"},{"location":"user-guide/supported-devices/#digital-output-digital_output","text":"General purpose single digital output. Can be used for generating digital signal on single wire. Works for devices like relay (prefer RELAY ). Additional configuration: NONE","title":"Digital output (DIGITAL_OUTPUT)"},{"location":"user-guide/supported-devices/#analog-devices","text":"","title":"Analog devices"},{"location":"user-guide/supported-devices/#sct013-sct013","text":"Non-invasive AC Current Sensor (SCT-013-000). It allows to measure current. Additional configuration: NONE","title":"SCT013 (SCT013)"},{"location":"user-guide/supported-devices/#pjon-devices","text":"This group of devices requires PJON controller on the side of the device for communication with RoomHub. PJON devices are not yet supported in current version of RoomHub ( see issue on Github ).","title":"PJON devices"},{"location":"user-guide/supported-devices/#bme280-bme280-github-issue-6","text":"Temperature and humidity sensor. Requires PJON controller. Additional configuration: pjonId [default: 0] - PJON controller identifier on PJON bus (0 means it will be assigned automatically) [TODO: do we support automatic assignment in current version?]","title":"BME280 (BME280) GitHub issue #6"},{"location":"user-guide/supported-devices/#support-planned-in-the-next-version","text":"","title":"Support planned in the next version"},{"location":"user-guide/supported-devices/#dht22-dht22-github-issue-12","text":"Temperature and humidity sensor.","title":"DHT22 (DHT22) GitHub issue #12"},{"location":"user-guide/troubleshooting/","text":"RoomHub cannot connect to MQTT, even when configured MQTT hostname is correct Some ESP32 modules have problems with connection client, probably because of some previously stored data. See GitHub issue for more details https://github.com/espressif/arduino-esp32/issues/180 . Currently the only proved workaround is to change firmware temporarily to call Client.flush(); . RoomHub disconnects from MQTT from time to time [TODO describe problem] Switch button doesn't work properly - sometimes it sends message once and sometimes multiple times Debounce value is too low. See Switch button in supported devices section for details.","title":"Troubleshooting"},{"location":"user-guide/troubleshooting/#roomhub-cannot-connect-to-mqtt-even-when-configured-mqtt-hostname-is-correct","text":"Some ESP32 modules have problems with connection client, probably because of some previously stored data. See GitHub issue for more details https://github.com/espressif/arduino-esp32/issues/180 . Currently the only proved workaround is to change firmware temporarily to call Client.flush(); .","title":"RoomHub cannot connect to MQTT, even when configured MQTT hostname is correct"},{"location":"user-guide/troubleshooting/#roomhub-disconnects-from-mqtt-from-time-to-time","text":"[TODO describe problem]","title":"RoomHub disconnects from MQTT from time to time"},{"location":"user-guide/troubleshooting/#switch-button-doesnt-work-properly-sometimes-it-sends-message-once-and-sometimes-multiple-times","text":"Debounce value is too low. See Switch button in supported devices section for details.","title":"Switch button doesn't work properly - sometimes it sends message once and sometimes multiple times"},{"location":"user-guide/wiring/","text":"[TODO describes possible house wirings]","title":"Wiring"}]}